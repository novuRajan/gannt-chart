{"version":3,"file":"gantt.js","sources":["../js/date-utl.js","../js/updatechart.js","../js/saveEdit.js","../js/gantchart.js"],"sourcesContent":["const svgNS = 'http://www.w3.org/2000/svg';\n\nexport function createGridLines(dateGroup, chartWidth, taskCount) {\n    const gridLines = document.createElementNS(svgNS, 'g');\n    gridLines.classList.add('lines')\n    dateGroup.appendChild(gridLines)\n    for (let i = 0; i <= chartWidth; i += 50) {\n        const line = document.createElementNS(svgNS, 'line');\n        line.setAttribute('x1', i);\n        line.setAttribute('x2', i);\n        line.setAttribute('y1', 35);\n        line.setAttribute('y2', taskCount * 40 + 40);\n        line.classList.add('grid-line');\n        gridLines.appendChild(line);\n    }\n}\n\nexport function createMonthHeadings(dateGroup, dateInfo, chartWidth) {\n    const month = document.createElementNS(svgNS, 'g');\n    month.classList.add('month')\n    dateGroup.appendChild(month)\n    const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n    let currentMonth = -1;\n\n    for (let i = 0; i <= chartWidth; i += 50) {\n        const currentDate = new Date(dateInfo.startingDate.getTime() + i / 50 * (24 * 60 * 60 * 1000));\n        const monthIndex = currentDate.getMonth();\n        if (monthIndex !== currentMonth) {\n        currentMonth = monthIndex;\n\n        const monthHeading = document.createElementNS(svgNS, 'text');\n        monthHeading.setAttribute('x', i);\n        monthHeading.setAttribute('y', 15);\n        monthHeading.classList.add('month-heading');\n        monthHeading.textContent = months[currentMonth];\n        month.appendChild(monthHeading);\n        }\n    }\n}\n\nexport function createDateScale(dateGroup, dateInfo, chartWidth, taskCount) {\n    const date = document.createElementNS(svgNS,'g')\n    dateGroup.appendChild(date)\n    date.classList.add('date')\n    const dateScale = document.createElementNS(svgNS, 'text');\n    dateScale.setAttribute('x', '0');\n    dateScale.setAttribute('y', taskCount);\n    date.appendChild(dateScale);\n\n    for (let i = 0; i <= chartWidth; i += 50) {\n        const currentDate = new Date(dateInfo.startingDate.getTime() + i / 50 * (24 * 60 * 60 * 1000));\n        const text = document.createElementNS(svgNS, 'text');\n        text.setAttribute('x', i - 3);\n        text.setAttribute('y', taskCount + 25);\n        text.textContent = currentDate.getDate();\n        date.appendChild(text);\n    }\n}\n","export const updateTaskStartEndDates =(tasks)=> {\n  const taskMap = new Map(tasks.map(task => [task.id, task]));\n\n  tasks.forEach(task => {\n    updateTaskDates(task, taskMap);\n    updateSubTaskStartEndDate(task);\n  });\n\n}\nfunction updateTaskDates(task, taskMap) {\n  if (task.dependencies.length === 0) {\n    return; // Base case: no dependencies, nothing to update\n  }\n\n  const dependentTasks = task.dependencies.map(depId => taskMap.get(depId));\n\n  // Find the maximum end date among dependent tasks\n  const maxEndDate = new Date(Math.max(...dependentTasks.map(depTask => new Date(depTask.end))));\n\n  dependentTasks.forEach(dependentTask => {\n    updateTaskDates(dependentTask, taskMap);\n\n    // Calculate the duration of the task\n    const duration = (new Date(task.end) - new Date(task.start)) / (24 * 60 * 60 * 1000);\n\n    // Check if the start date of the dependent task is after the max end date\n    if (new Date(task.start) < maxEndDate) {\n      // Update the start date of the current task based on the maximum end date of dependent tasks\n      task.start = maxEndDate.toISOString().split('T')[0];\n\n      // Update the end date of the current task based on its duration\n      task.end = new Date(new Date(task.start).setDate(new Date(task.start).getDate() + duration)).toISOString().split('T')[0];\n    }\n  });\n  \n}\n\nfunction updateSubTaskStartEndDate(task)\n{\n   // Check if the task has subtasks\n   if (task.subTask && task.subTask.length > 0) {\n    const subTaskMap=new Map(task.subTask.map(subtask => [subtask.id, subtask]));\n    task.subTask.forEach(subTask => {\n      const subDuration = (new Date(subTask.end) - new Date(subTask.start)) / (24 * 60 * 60 * 1000);\n      // Example condition: If subtask start date is less than task start date, update it\n      if (new Date(subTask.start) < new Date(task.start)) {\n        subTask.start = task.start;\n        subTask.end = new Date(new Date(subTask.start).setDate(new Date(task.start).getDate() + subDuration)).toISOString().split('T')[0];\n      }\n      else \n      {\n        const gap = (new Date(subTask.start) - new Date(task.start)) / (24 * 60 * 60 * 1000);\n        subTask.start = new Date(new Date(subTask.start).setDate(new Date(task.start).getDate() + gap)).toISOString().split('T')[0];\n      }\n      updateTaskDates(subTask,subTaskMap)\n      if(subTask.end > task.end)\n      {\n        task.end = subTask.end\n      }\n    });\n  }\n}\n","import { updateTaskStartEndDates } from \"./updatechart.js\";\nimport GanttChart from \"./gantchart.js\";\n\nconst tooltip = document.createElement('div');\ntooltip.className = 'bar-hover';\ndocument.body.appendChild(tooltip);\nexport function closeEditModal() {\n    const editModal = document.getElementById('editModal');\n    editModal.style.display = 'none';\n}\n\n//function to update the task array\nexport function addTask(tasks) {\n    const taskName = document.getElementById('taskName').value;\n    const startDate = document.getElementById('startDate').value;\n    const endDate = document.getElementById('endDate').value;\n\n    // Ensure the required fields are not empty\n    if (!taskName || !startDate || !endDate) {\n        alert('Please fill in all fields.');\n        return;\n    }\n\n    const newTask = {\n        id: tasks.length + 1, // Incremental ID\n        name: taskName,\n        start: startDate,\n        end: endDate,\n        progress: 0, // You can set the progress as needed\n        dependencies: [] // You can set dependencies as needed\n    };\n\n    // Add the new task to the existing tasks\n    tasks.push(newTask);\n    length = length + 1; //after adding of each task length should be increased\n    // Update the Gantt chart with the new data\n    updateTaskStartEndDates(tasks);\n    // Call the function with sample data\n    GanttChart.createChart(tasks);\n}\n  \n// Function to handle task editing\nexport function editTask(event, task, tasks, allTasks = null) {\n    event.preventDefault();\n    GanttChart.stopDrag();\n\n    // Create or get the modal element\n    let editModal = document.getElementById('editModal');\n    if (!editModal) {\n        editModal = document.createElement('div');\n        editModal.setAttribute('id', 'editModal');\n        editModal.setAttribute('class','modal')\n        document.body.appendChild(editModal);\n    }\n\n    // Create or get the form element\n    let editTaskForm = document.getElementById('editTaskForm');\n    if (!editTaskForm) {\n        editTaskForm = document.createElement('form');\n        editTaskForm.setAttribute('id', 'editTaskForm');\n        editModal.appendChild(editTaskForm);\n    }\n\n    // Clear existing content in the form\n    editTaskForm.innerHTML = '';\n\n    // Create form elements dynamically and append them to the form\n    createFormField('Task Name:', 'editTaskName', task.name, 'text', true);\n    createFormField('Start Date:', 'editStartDate', task.start, 'date', true);\n    createFormField('End Date:', 'editEndDate', task.end, 'date', true);\n    createFormField('Progress:', 'editProgress', task.progress, 'number', true);\n\n    // Clear existing options\n    const editDependenciesSelect = document.createElement('select');\n    editDependenciesSelect.setAttribute('id', 'editDependencies');\n    editDependenciesSelect.setAttribute('multiple', 'multiple'); // Set the multiple attribute\n    editTaskForm.appendChild(editDependenciesSelect);\n\n    // Display dependencies in the modal as select options\n    tasks.forEach(availableTask => {\n        // Check if the available task is not the current task and not dependent on the current task\n        if (availableTask.id !== task.id && !isTaskDependent(task, availableTask, tasks)) {\n            const option = document.createElement('option');\n            option.value = availableTask.id;\n            option.textContent = availableTask.name;\n            if (task.dependencies.includes(availableTask.id)) {\n                // If the task is already a dependency, mark it as selected\n                option.selected = true;\n            }\n            editDependenciesSelect.appendChild(option);\n        }\n    });\n\n    // Store the task ID in a data attribute of the form\n    editTaskForm.setAttribute('data-task-id', task.id);\n\n    // Create and append Save Changes button\n    const saveChangesBtn = document.createElement('button');\n    saveChangesBtn.setAttribute('type', 'button');\n    saveChangesBtn.textContent = 'Save Changes';\n    saveChangesBtn.addEventListener('click', function saveChangesHandler() {\n        // Call your function to save the edited task data\n        saveEditedTask(tasks, allTasks);\n        // Close the modal after saving changes\n        closeEditModal();\n    });\n    editTaskForm.appendChild(saveChangesBtn);\n\n    // Create and append Cancel button\n    const cancelBtn = document.createElement('button');\n    cancelBtn.setAttribute('type', 'button');\n    cancelBtn.textContent = 'Cancel';\n    cancelBtn.addEventListener('click', closeEditModal);\n    editTaskForm.appendChild(cancelBtn);\n\n    // Display the modal\n    editModal.style.display = 'block';\n\n    // Prevent the contextmenu event from propagating further\n    event.preventDefault();\n}\n\nfunction createFormField(labelText, inputId, inputValue, inputType, required) {\n    const label = document.createElement('label');\n    label.setAttribute('for', inputId);\n    label.textContent = labelText;\n\n    const input = document.createElement('input');\n    input.setAttribute('type', inputType);\n    input.setAttribute('id', inputId);\n    input.setAttribute('name', inputId);\n    input.value = inputValue;\n    input.required = required;\n\n    // Append label and input to the form\n    editTaskForm.appendChild(label);\n    editTaskForm.appendChild(input);\n}\n\n\n  \n// Function to check if a task is dependent on another task\nexport function isTaskDependent(currentTask, otherTask, allTasks) {\n    return otherTask.dependencies.includes(currentTask.id) || otherTask.dependencies.some(depId => isTaskDependent(currentTask, allTasks[depId - 1], allTasks));\n}\n  \n// Function to save edited task\nexport function saveEditedTask(tasks,alltasks=null) {\n    // console.log(tasks);\n    const editTaskForm = document.getElementById('editTaskForm');\n    const editTaskNameInput = document.getElementById('editTaskName');\n    const editStartDateInput = document.getElementById('editStartDate');\n    const editEndDateInput = document.getElementById('editEndDate');\n    const editProgress = document.getElementById('editProgress');\n    const editDependenciesSelect = document.getElementById('editDependencies');\n\n    // Retrieve the edited values\n    const editedTaskName = editTaskNameInput.value;\n    const editedStartDate = editStartDateInput.value;\n    const editedEndDate = editEndDateInput.value;\n    const progress = editProgress.value;\n    // Retrieve the task ID from the data attribute\n    const taskId = parseInt(editTaskForm.getAttribute('data-task-id'), 10);\n\n    // Retrieve the selected dependencies from the updated select element\n    const selectedDependencies = Array.from(editDependenciesSelect.selectedOptions).map(option => parseInt(option.value, 10));\n\n    // Find the task in the array and update its properties\n    const editedTaskIndex = tasks.findIndex(task => task.id === taskId);\n    if (editedTaskIndex !== -1) {\n        tasks[editedTaskIndex].name = editedTaskName;\n        tasks[editedTaskIndex].start = editedStartDate;\n        tasks[editedTaskIndex].end = editedEndDate;\n        tasks[editedTaskIndex].progress = progress > 100 ? 100 : progress;\n        tasks[editedTaskIndex].dependencies = selectedDependencies;\n    }\n\n    // Update the Gantt chart with the new data\n    updateTaskStartEndDates(tasks);\n    console.log(tasks);\n    // Call the function with sample data\n    if(alltasks)\n    {\n        GanttChart.createChart(alltasks);\n    }\n    else{\n        GanttChart.createChart(tasks);\n    }\n\n    // Close the modal\n    closeEditModal();\n}\n\nexport function showTaskDetails(task,allTasks) {\n    const dependentTaskNames = task.dependencies.map(depId => allTasks[depId - 1].name);\n    const dependentTaskInfo = dependentTaskNames.length > 0 ? `Dependencies: ${dependentTaskNames.join(', ')}` : '';\n\n    tooltip.innerHTML = `\n    Task: ${task.name}<br>\n    Start: ${task.start}<br>\n    End: ${task.end}<br>\n    ${dependentTaskInfo}\n    `;\n    tooltip.style.left = `${event.pageX}px`;\n    tooltip.style.top = `${event.pageY}px`;\n    tooltip.style.display = 'block';\n}\n\nexport function hideTaskDetails() {\n    tooltip.style.display = 'none';\n}","import { createGridLines, createMonthHeadings, createDateScale } from './date-utl.js';\nimport { updateTaskStartEndDates } from './updatechart.js';\nimport { hideTaskDetails , showTaskDetails , editTask ,saveEditedTask , addTask  } from './saveEdit.js';\n\nconst svgNS = 'http://www.w3.org/2000/svg';\nexport default class GanttChart {\n  constructor() {\n    this.dateInfo;\n    this.taskCount;\n    this.isDragging = false;\n    this.initialX;\n    this.initialWidth;\n    this.isDragStart;\n    // Variables to store the current task and progress bar\n    this.currentTaskRect;\n    this.currentProgressRect;\n    this.dragMoveListener = null;\n    this.length;\n    this.dependentTask ;\n    this.tasks ;\n    this.allTask ; \n  }\n\n  getTotalLength(tasks) {\n    return tasks.reduce((total, task) => {\n      return total + 1 + (task.subTask ? this.getTotalLength(task.subTask) : 0);\n    }, 0);\n  }\n\n  createGanttChart(tasks) {\n    updateTaskStartEndDates(tasks);\n    const chartContainer = document.getElementById('chart');\n    let svg = chartContainer.querySelector('svg');\n\n    // Check if the SVG element already exists\n    if (!svg) {\n      // If not, create a new SVG element\n      svg = this.createSVG(tasks);\n      chartContainer.appendChild(svg);\n    } else {\n      this.updateGanttChartContent(svg, tasks);\n    }\n  }\n\n  createSVG(tasks) {\n    const svg = document.createElementNS(svgNS, 'svg');\n    svg.setAttribute('min-width', '100%');\n    svg.setAttribute('height', '200%');\n    const dateGroup = document.createElementNS(svgNS, 'g'); // Create a group element for the task\n    dateGroup.setAttribute('class', 'date-groups');\n    svg.appendChild(dateGroup);\n    this.dateInfo = this.calculateDateInfo(tasks);\n    const chartWidth = this.calculateChartWidth(this.dateInfo);\n    this.length = this.getTotalLength(tasks);\n\n    svg.setAttribute('viewBox', `0 0 ${chartWidth} ${this.length * 40 + 40}`);\n\n    createGridLines(dateGroup, chartWidth, this.length);\n    createMonthHeadings(dateGroup, this.dateInfo, chartWidth);\n    createDateScale(dateGroup, this.dateInfo, chartWidth, this.length);\n    this.createTaskBars(svg, tasks, this.dateInfo);\n    return svg;\n  }\n\n  calculateDateInfo(tasks) {\n    const startDates = tasks.map(task => new Date(task.start));\n    const endDates = tasks.map(task => new Date(task.end));\n\n    const minDate = new Date(Math.min(...startDates));\n    const startingDate = new Date(minDate);\n    startingDate.setDate(minDate.getDate() - 5);\n\n    const maxDate = new Date(Math.max(...endDates));\n    const dateDiff = (maxDate - minDate) / (24 * 60 * 60 * 1000);\n\n    let multiplier = dateDiff > 100 ? 54 : dateDiff > 30 ? 60 : 120;\n\n    return { startingDate, maxDate, multiplier };\n  }\n\n  calculateChartWidth(dateInfo) {\n    return (dateInfo.multiplier * ((dateInfo.maxDate - dateInfo.startingDate) / (24 * 60 * 60 * 1000)));\n  }\n\n  createTaskBars(svg, tasks, dateInfo) {\n    let customIndex = 0;\n\n    tasks.forEach((task, index) => {\n      const taskGroup = document.createElementNS(svgNS, 'g'); // Create a group element for the task\n      taskGroup.setAttribute('class', 'tasks');\n      svg.appendChild(taskGroup);\n\n      const dependentTaskEnd = Math.max(...task.dependencies.map(depId => new Date(tasks[depId - 1].end)));\n      const startOffset = Math.max((dependentTaskEnd - dateInfo.startingDate) / (24 * 60 * 60 * 1000) * 50, (new Date(task.start) - dateInfo.startingDate) / (24 * 60 * 60 * 1000) * 50);\n      const duration = (new Date(task.end) - new Date(task.start)) / (24 * 60 * 60 * 1000) * 50;\n\n      const rect = document.createElementNS(svgNS, 'rect');\n      rect.setAttribute('x', startOffset);\n      rect.setAttribute('y', customIndex * 40 + 40);\n      rect.setAttribute('width', duration);\n      rect.setAttribute('height', 30);\n      rect.setAttribute('fill', '#3498db');\n      taskGroup.appendChild(rect);\n\n      const progressWidth = (duration * task.progress) / 100;\n      const progressRect = document.createElementNS(svgNS, 'rect');\n      progressRect.setAttribute('x', startOffset);\n      progressRect.setAttribute('y', customIndex * 40 + 40);\n      progressRect.setAttribute('width', progressWidth);\n      progressRect.setAttribute('height', 30);\n      progressRect.setAttribute('fill', '#2ecc71');\n      taskGroup.appendChild(progressRect);\n\n      const text = document.createElementNS(svgNS, 'text');\n      text.setAttribute('x', startOffset + 5);\n      text.setAttribute('y', customIndex * 40 + 60);\n      text.textContent = task.name;\n      taskGroup.appendChild(text);\n\n      // Render subtasks\n      if (task.subTask && task.subTask.length > 0) {\n        const subTaskGroup = document.createElementNS(svgNS, 'g'); // Create a group element for the task\n        subTaskGroup.setAttribute('class','subtask')\n        taskGroup.appendChild(subTaskGroup);\n        task.subTask.forEach((subtask, subIndex) => {\n          const subDependentTaskEnd = Math.max(...subtask.dependencies.map(depId => new Date(task.subTask[depId - 1].end)));\n          const subStartOffset = Math.max((subDependentTaskEnd - dateInfo.startingDate) / (24 * 60 * 60 * 1000) * 50, (new Date(subtask.start) - dateInfo.startingDate) / (24 * 60 * 60 * 1000) * 50);\n          const subDuration = (new Date(subtask.end) - new Date(subtask.start)) / (24 * 60 * 60 * 1000) * 50;\n\n          const subRect = document.createElementNS(svgNS, 'rect');\n          subRect.setAttribute('class','subtask')\n          subRect.setAttribute('x', subStartOffset);\n          subRect.setAttribute('y', (subIndex + customIndex + 1) * 40 + 40);\n          subRect.setAttribute('width', subDuration);\n          subRect.setAttribute('height', 15);\n          subRect.setAttribute('fill', '#e74c3c');\n          subTaskGroup.appendChild(subRect);\n\n          const subProgressWidth = (subDuration * subtask.progress) / 100;\n          const subProgressRect = document.createElementNS(svgNS, 'rect');\n          subProgressRect.setAttribute('class','subtask-progress')\n          subProgressRect.setAttribute('x', subStartOffset);\n          subProgressRect.setAttribute('y', (subIndex + customIndex + 1) * 40 + 40);\n          subProgressRect.setAttribute('width', subProgressWidth);\n          subProgressRect.setAttribute('height', 15);\n          subProgressRect.setAttribute('fill', '#c0392b');\n          subTaskGroup.appendChild(subProgressRect);\n\n          const subText = document.createElementNS(svgNS, 'text');\n          subText.setAttribute('x', subStartOffset + 5);\n          subText.setAttribute('y', (subIndex + customIndex + 1) * 40 + 50);\n          subText.textContent = subtask.name;\n          subText.setAttribute('font-size', '10px');\n          subTaskGroup.appendChild(subText);\n\n          subText.addEventListener('mouseover', () => showTaskDetails(subtask, task.subTask));\n          subRect.addEventListener('mouseover', () => showTaskDetails(subtask, task.subTask));\n          subRect.addEventListener('mouseout', hideTaskDetails);\n\n          subProgressRect.addEventListener('mouseover', () => showTaskDetails(subtask, task.subTask));\n          subProgressRect.addEventListener('mouseout', hideTaskDetails);\n\n          subRect.addEventListener('contextmenu', (event) => {\n            event.preventDefault();\n            editTask(event, subtask, task.subTask, tasks);\n          });\n          subProgressRect.addEventListener('contextmenu', (event) => {\n            event.preventDefault();\n            editTask(event, subtask, task.subTask, tasks);\n          });\n          subText.addEventListener('contextmenu', (event) => {\n            event.preventDefault();\n            editTask(event, subtask, task.subTask, tasks);\n          });\n          subRect.addEventListener('mousedown', (event) => {\n            event.preventDefault();\n            this.startDrag(event, subRect, subProgressRect , subtask , task.subTask , tasks);\n          });\n          subProgressRect.addEventListener('mousedown', (event) => {\n            event.preventDefault();\n            this.startDrag(event, subRect, subProgressRect, subtask , task.subTask , tasks)\n          });\n          subText.addEventListener('mousedown', (event) => {\n            event.preventDefault();\n            this.startDrag(event, subRect, subProgressRect , subtask , task.subTask , tasks);\n          });\n        });\n      }\n\n      // Add event listeners for both rectangle and progress bar\n      text.addEventListener('mouseover', () => showTaskDetails(task, tasks));\n      rect.addEventListener('mouseover', () => showTaskDetails(task, tasks));\n      rect.addEventListener('mouseout', hideTaskDetails);\n\n      progressRect.addEventListener('mouseover', () => showTaskDetails(task, tasks));\n      progressRect.addEventListener('mouseout', hideTaskDetails);\n\n      rect.addEventListener('contextmenu', (event) => {\n        event.preventDefault();\n        editTask(event, task, tasks);\n      });\n      progressRect.addEventListener('contextmenu', (event) => {\n        event.preventDefault();\n        editTask(event, task, tasks);\n      });\n      text.addEventListener('contextmenu', (event) => {\n        event.preventDefault();\n        editTask(event, task, tasks);\n      });\n      // Add event listeners for dragging to edit start and end dates\n      rect.addEventListener('mousedown', (event) => {\n        event.preventDefault();\n        this.startDrag(event, rect, progressRect,task ,tasks);\n      });\n      progressRect.addEventListener('mousedown', (event) => {\n        event.preventDefault();\n        this.startDrag(event, rect, progressRect ,task ,tasks)\n      });\n      text.addEventListener('mousedown', (event) => {\n        event.preventDefault();\n        this.startDrag(event, rect, progressRect,task ,tasks);\n      });     \n      document.addEventListener('mouseup', (event) => {\n        document.removeEventListener('mousemove',this.dragMoveListener)\n        this.handleMouseUp(this.taskRect, this.dependentTask, this.tasks, this.dateInfo ,this.allTasks);\n      });\n      // task below the subtask\n      customIndex = customIndex + 1;\n      if (task.subTask && task.subTask.length > 0) {\n        customIndex = customIndex + task.subTask.length;\n      }\n    });\n  }\n\n  throttle(func, limit) {\n    let inThrottle;\n    return function () {\n      const args = arguments;\n      const context = this;\n      if (!inThrottle) {\n        func.apply(context, args);\n        inThrottle = true;\n        setTimeout(() => (inThrottle = false), limit);\n      }\n    };\n  }\n\n  isExceedingDepenentEndDate(sartDate, dependentTask, tasks) {\n    const tasksWithDesiredIds = tasks.filter(task =>\n      dependentTask.dependencies.includes(task.id)\n    );\n    const endDates = tasksWithDesiredIds.map(task => new Date(task.end));\n    const maxDate = new Date(Math.max(...endDates))\n    if (maxDate > sartDate) {\n      return 1;\n    } else {\n      return 0;\n    }\n  }\n\n  handleDragMove(event, taskRect, progress, dependentTask, tasks ,allTasks=null) {\n    event.preventDefault();\n    if (this.isDragging) {\n      this.updateTaskBarPosition(event.clientX, taskRect, progress, dependentTask, tasks ,allTasks);\n    }\n  }\n\n  startDrag(event, taskRect, taskProgressRect , dependentTask, task , allTasks=null) {\n    this.dependentTask = dependentTask ;\n    this.tasks = task ;\n    this.allTasks = allTasks ; \n    document.body.classList.add('dragging');\n    hideTaskDetails\n    this.isDragging = true;\n    this.initialX = event.clientX;\n    this.initialWidth = parseFloat(taskRect.getAttribute('width'));\n    this.isDragStart = event.clientX < taskRect.getBoundingClientRect().left + this.initialWidth / 2;\n\n    // Set the current task and progress bar\n    this.currentTaskRect = taskRect;\n    this.currentProgressRect = taskProgressRect;\n    this.dragMoveListener = this.throttle((event) => {\n      this.handleDragMove(event, this.currentTaskRect, this.currentProgressRect, dependentTask, task, allTasks);\n    }, 16); \n    event.preventDefault();\n    document.addEventListener('mousemove',this.dragMoveListener);\n\n  }\n\n  updateTaskBarPosition(clientX, taskRect, progress, dependentTask, tasks ,allTasks) {\n    const deltaX = (clientX - this.initialX) * .73 // Adjust the sensitivity factor \n    if (this.isDragStart) {\n      // Dragging start handle\n      const newStartOffset = (new Date(dependentTask.start) - this.dateInfo.startingDate) / (24 * 60 * 60 * 1000) * 50 + deltaX;\n      const startDate = new Date(this.dateInfo.startingDate.getTime() + (parseFloat(taskRect.getAttribute('x'))) / 50 * (24 * 60 * 60 * 1000));\n\n      if (this.isExceedingDepenentEndDate(startDate, dependentTask, tasks)) {\n        alert('Start Date has exceeded its dependent EndDate');\n        document.body.classList.remove('dragging');\n        this.isDragging = false;\n        const updatedTaskIndex = tasks.findIndex(t => t.id === dependentTask.id);\n        if (updatedTaskIndex !== -1) {\n          const newEndDate = new Date(startDate.getTime() + (parseFloat(taskRect.getAttribute('width')) / 52) * (24 * 60 * 60 * 1000));\n\n          // Update the properties of the task in the array\n          tasks[updatedTaskIndex].start = startDate.toISOString().split('T')[0];\n          tasks[updatedTaskIndex].end = newEndDate.toISOString().split('T')[0];\n\n          // Update the Gantt chart with the new data\n          updateTaskStartEndDates(tasks);\n          if(allTasks)\n          {\n            this.createGanttChart(allTasks);\n          }\n          else{\n            this.createGanttChart(tasks);\n          }\n        }\n      }\n\n      // const endDate = new Date(dateInfo.startingDate.getTime() + (parseFloat(taskRect.getAttribute('x')) + parseFloat(taskRect.getAttribute('width'))) / 50 * (24 * 60 * 60 * 1000));\n\n      const maxStartOffset = parseFloat(taskRect.getAttribute('x')) + parseFloat(taskRect.getAttribute('width'));\n      const adjustedStartOffset = Math.min(newStartOffset, maxStartOffset);\n      const adjustedWidth = maxStartOffset - adjustedStartOffset;\n      taskRect.setAttribute('x', newStartOffset);\n      taskRect.setAttribute('width', adjustedWidth);\n\n      progress.setAttribute('x', newStartOffset);\n      progress.setAttribute('width', adjustedWidth * dependentTask.progress / 100);\n\n    } else {\n      // Dragging end handle\n      const newWidth = this.initialWidth + deltaX;\n      taskRect.setAttribute('width', newWidth);\n      progress.setAttribute('width', newWidth * dependentTask.progress / 100);\n    }\n    this.taskRect = taskRect;\n  }\n\n  handleMouseUp(taskRect,  dependentTask, tasks, dateInfo, allTasks = null) {\n    document.body.classList.remove('dragging');\n    if (this.isDragging) {\n      this.isDragging = false\n      // Find the task in the array and update its properties\n      const updatedTaskIndex = tasks.findIndex((t) => t.id === dependentTask.id);\n      if (updatedTaskIndex !== -1) {\n        const newStartDate = new Date(\n          dateInfo.startingDate.getTime() +\n          (parseFloat(taskRect.getAttribute('x')) / 50) * (24 * 60 * 60 * 1000)\n        );\n        const newEndDate = new Date(\n          newStartDate.getTime() +\n          (parseFloat(taskRect.getAttribute('width')) / 50) * (24 * 60 * 60 * 1000)\n        );\n        // Update the properties of the task in the array\n        tasks[updatedTaskIndex].start = newStartDate.toISOString().split('T')[0];\n        tasks[updatedTaskIndex].end = newEndDate.toISOString().split('T')[0];\n        // Update the Gantt chart with the new data\n        updateTaskStartEndDates(tasks);\n        if (allTasks) {\n          this.createGanttChart(allTasks);\n        } else {\n          this.createGanttChart(tasks);\n        }\n\n      }\n    }\n\n  }\n\n  updateGanttChartContent(svg, tasks) {\n    // Clear existing content\n    while (svg.firstChild) {\n      svg.removeChild(svg.firstChild);\n    }\n    this.length = this.getTotalLength(tasks)\n    // Update the content with the new tasks\n    this.dateInfo = this.calculateDateInfo(tasks);\n    const chartWidth = this.calculateChartWidth(this.dateInfo);\n    const dateGroup = document.createElementNS(svgNS, 'g'); // Create a group element for the task\n    dateGroup.setAttribute('class', 'date-groups');\n    svg.appendChild(dateGroup);\n\n    svg.setAttribute('viewBox', `0 0 ${chartWidth} ${this.length * 40 + 40}`);\n\n    createGridLines(dateGroup, chartWidth, this.length);\n    createMonthHeadings(dateGroup, this.dateInfo, chartWidth);\n    createDateScale(dateGroup, this.dateInfo, chartWidth, this.length);\n    this.createTaskBars(svg, tasks, this.dateInfo);\n  }\n  static createChart(tasks) {\n    console.log(tasks);\n    const ganttChart = new GanttChart();\n    ganttChart.createGanttChart(tasks);\n  }\n\n  static stopDrag(){\n    // Remove the event listener when the dragging stops\n    document.removeEventListener('mousemove', this.dragMoveListener);  \n  }\n}"],"names":["svgNS"],"mappings":";;;IAAA,MAAMA,OAAK,GAAG,4BAA4B,CAAC;AAC3C;IACO,SAAS,eAAe,CAAC,SAAS,EAAE,UAAU,EAAE,SAAS,EAAE;IAClE,IAAI,MAAM,SAAS,GAAG,QAAQ,CAAC,eAAe,CAACA,OAAK,EAAE,GAAG,CAAC,CAAC;IAC3D,IAAI,SAAS,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,EAAC;IACpC,IAAI,SAAS,CAAC,WAAW,CAAC,SAAS,EAAC;IACpC,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,UAAU,EAAE,CAAC,IAAI,EAAE,EAAE;IAC9C,QAAQ,MAAM,IAAI,GAAG,QAAQ,CAAC,eAAe,CAACA,OAAK,EAAE,MAAM,CAAC,CAAC;IAC7D,QAAQ,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;IACnC,QAAQ,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;IACnC,QAAQ,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;IACpC,QAAQ,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,SAAS,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;IACrD,QAAQ,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;IACxC,QAAQ,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IACpC,KAAK;IACL,CAAC;AACD;IACO,SAAS,mBAAmB,CAAC,SAAS,EAAE,QAAQ,EAAE,UAAU,EAAE;IACrE,IAAI,MAAM,KAAK,GAAG,QAAQ,CAAC,eAAe,CAACA,OAAK,EAAE,GAAG,CAAC,CAAC;IACvD,IAAI,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,EAAC;IAChC,IAAI,SAAS,CAAC,WAAW,CAAC,KAAK,EAAC;IAChC,IAAI,MAAM,MAAM,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;IACxG,IAAI,IAAI,YAAY,GAAG,CAAC,CAAC,CAAC;AAC1B;IACA,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,UAAU,EAAE,CAAC,IAAI,EAAE,EAAE;IAC9C,QAAQ,MAAM,WAAW,GAAG,IAAI,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,OAAO,EAAE,GAAG,CAAC,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC;IACvG,QAAQ,MAAM,UAAU,GAAG,WAAW,CAAC,QAAQ,EAAE,CAAC;IAClD,QAAQ,IAAI,UAAU,KAAK,YAAY,EAAE;IACzC,QAAQ,YAAY,GAAG,UAAU,CAAC;AAClC;IACA,QAAQ,MAAM,YAAY,GAAG,QAAQ,CAAC,eAAe,CAACA,OAAK,EAAE,MAAM,CAAC,CAAC;IACrE,QAAQ,YAAY,CAAC,YAAY,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;IAC1C,QAAQ,YAAY,CAAC,YAAY,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;IAC3C,QAAQ,YAAY,CAAC,SAAS,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;IACpD,QAAQ,YAAY,CAAC,WAAW,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC;IACxD,QAAQ,KAAK,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;IACxC,SAAS;IACT,KAAK;IACL,CAAC;AACD;IACO,SAAS,eAAe,CAAC,SAAS,EAAE,QAAQ,EAAE,UAAU,EAAE,SAAS,EAAE;IAC5E,IAAI,MAAM,IAAI,GAAG,QAAQ,CAAC,eAAe,CAACA,OAAK,CAAC,GAAG,EAAC;IACpD,IAAI,SAAS,CAAC,WAAW,CAAC,IAAI,EAAC;IAC/B,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,EAAC;IAC9B,IAAI,MAAM,SAAS,GAAG,QAAQ,CAAC,eAAe,CAACA,OAAK,EAAE,MAAM,CAAC,CAAC;IAC9D,IAAI,SAAS,CAAC,YAAY,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IACrC,IAAI,SAAS,CAAC,YAAY,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC;IAC3C,IAAI,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;AAChC;IACA,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,UAAU,EAAE,CAAC,IAAI,EAAE,EAAE;IAC9C,QAAQ,MAAM,WAAW,GAAG,IAAI,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,OAAO,EAAE,GAAG,CAAC,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC;IACvG,QAAQ,MAAM,IAAI,GAAG,QAAQ,CAAC,eAAe,CAACA,OAAK,EAAE,MAAM,CAAC,CAAC;IAC7D,QAAQ,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;IACtC,QAAQ,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,SAAS,GAAG,EAAE,CAAC,CAAC;IAC/C,QAAQ,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC,OAAO,EAAE,CAAC;IACjD,QAAQ,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IAC/B,KAAK;IACL;;ICzDO,MAAM,uBAAuB,EAAE,CAAC,KAAK,IAAI;IAChD,EAAE,MAAM,OAAO,GAAG,IAAI,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;AAC9D;IACA,EAAE,KAAK,CAAC,OAAO,CAAC,IAAI,IAAI;IACxB,IAAI,eAAe,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;IACnC,IAAI,yBAAyB,CAAC,IAAI,CAAC,CAAC;IACpC,GAAG,CAAC,CAAC;AACL;IACA,EAAC;IACD,SAAS,eAAe,CAAC,IAAI,EAAE,OAAO,EAAE;IACxC,EAAE,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,KAAK,CAAC,EAAE;IACtC,IAAI,OAAO;IACX,GAAG;AACH;IACA,EAAE,MAAM,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,KAAK,IAAI,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;AAC5E;IACA;IACA,EAAE,MAAM,UAAU,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,cAAc,CAAC,GAAG,CAAC,OAAO,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACjG;IACA,EAAE,cAAc,CAAC,OAAO,CAAC,aAAa,IAAI;IAC1C,IAAI,eAAe,CAAC,aAAa,EAAE,OAAO,CAAC,CAAC;AAC5C;IACA;IACA,IAAI,MAAM,QAAQ,GAAG,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC;AACzF;IACA;IACA,IAAI,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,UAAU,EAAE;IAC3C;IACA,MAAM,IAAI,CAAC,KAAK,GAAG,UAAU,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1D;IACA;IACA,MAAM,IAAI,CAAC,GAAG,GAAG,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,EAAE,GAAG,QAAQ,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/H,KAAK;IACL,GAAG,CAAC,CAAC;IACL;IACA,CAAC;AACD;IACA,SAAS,yBAAyB,CAAC,IAAI;IACvC;IACA;IACA,GAAG,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;IAChD,IAAI,MAAM,UAAU,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;IACjF,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,IAAI;IACpC,MAAM,MAAM,WAAW,GAAG,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC;IACpG;IACA,MAAM,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;IAC1D,QAAQ,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;IACnC,QAAQ,OAAO,CAAC,GAAG,GAAG,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,EAAE,GAAG,WAAW,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1I,OAAO;IACP;IACA,MAAM;IACN,QAAQ,MAAM,GAAG,GAAG,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC;IAC7F,QAAQ,OAAO,CAAC,KAAK,GAAG,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACpI,OAAO;IACP,MAAM,eAAe,CAAC,OAAO,CAAC,UAAU,EAAC;IACzC,MAAM,GAAG,OAAO,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG;IAC/B,MAAM;IACN,QAAQ,IAAI,CAAC,GAAG,GAAG,OAAO,CAAC,IAAG;IAC9B,OAAO;IACP,KAAK,CAAC,CAAC;IACP,GAAG;IACH;;IC1DA,MAAM,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IAC9C,OAAO,CAAC,SAAS,GAAG,WAAW,CAAC;IAChC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;IAC5B,SAAS,cAAc,GAAG;IACjC,IAAI,MAAM,SAAS,GAAG,QAAQ,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;IAC3D,IAAI,SAAS,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;IACrC,CAAC;IA+BD;IACA;IACO,SAAS,QAAQ,CAAC,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,QAAQ,GAAG,IAAI,EAAE;IAC9D,IAAI,KAAK,CAAC,cAAc,EAAE,CAAC;IAC3B,IAAI,UAAU,CAAC,QAAQ,EAAE,CAAC;AAC1B;IACA;IACA,IAAI,IAAI,SAAS,GAAG,QAAQ,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;IACzD,IAAI,IAAI,CAAC,SAAS,EAAE;IACpB,QAAQ,SAAS,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IAClD,QAAQ,SAAS,CAAC,YAAY,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;IAClD,QAAQ,SAAS,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,EAAC;IAC/C,QAAQ,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;IAC7C,KAAK;AACL;IACA;IACA,IAAI,IAAI,YAAY,GAAG,QAAQ,CAAC,cAAc,CAAC,cAAc,CAAC,CAAC;IAC/D,IAAI,IAAI,CAAC,YAAY,EAAE;IACvB,QAAQ,YAAY,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;IACtD,QAAQ,YAAY,CAAC,YAAY,CAAC,IAAI,EAAE,cAAc,CAAC,CAAC;IACxD,QAAQ,SAAS,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;IAC5C,KAAK;AACL;IACA;IACA,IAAI,YAAY,CAAC,SAAS,GAAG,EAAE,CAAC;AAChC;IACA;IACA,IAAI,eAAe,CAAC,YAAY,EAAE,cAAc,EAAE,IAAI,CAAC,IAAI,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;IAC3E,IAAI,eAAe,CAAC,aAAa,EAAE,eAAe,EAAE,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;IAC9E,IAAI,eAAe,CAAC,WAAW,EAAE,aAAa,EAAE,IAAI,CAAC,GAAG,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;IACxE,IAAI,eAAe,CAAC,WAAW,EAAE,cAAc,EAAE,IAAI,CAAC,QAAQ,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC;AAChF;IACA;IACA,IAAI,MAAM,sBAAsB,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;IACpE,IAAI,sBAAsB,CAAC,YAAY,CAAC,IAAI,EAAE,kBAAkB,CAAC,CAAC;IAClE,IAAI,sBAAsB,CAAC,YAAY,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;IAChE,IAAI,YAAY,CAAC,WAAW,CAAC,sBAAsB,CAAC,CAAC;AACrD;IACA;IACA,IAAI,KAAK,CAAC,OAAO,CAAC,aAAa,IAAI;IACnC;IACA,QAAQ,IAAI,aAAa,CAAC,EAAE,KAAK,IAAI,CAAC,EAAE,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,aAAa,EAAE,KAAK,CAAC,EAAE;IAC1F,YAAY,MAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;IAC5D,YAAY,MAAM,CAAC,KAAK,GAAG,aAAa,CAAC,EAAE,CAAC;IAC5C,YAAY,MAAM,CAAC,WAAW,GAAG,aAAa,CAAC,IAAI,CAAC;IACpD,YAAY,IAAI,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,aAAa,CAAC,EAAE,CAAC,EAAE;IAC9D;IACA,gBAAgB,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC;IACvC,aAAa;IACb,YAAY,sBAAsB,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;IACvD,SAAS;IACT,KAAK,CAAC,CAAC;AACP;IACA;IACA,IAAI,YAAY,CAAC,YAAY,CAAC,cAAc,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;AACvD;IACA;IACA,IAAI,MAAM,cAAc,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;IAC5D,IAAI,cAAc,CAAC,YAAY,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;IAClD,IAAI,cAAc,CAAC,WAAW,GAAG,cAAc,CAAC;IAChD,IAAI,cAAc,CAAC,gBAAgB,CAAC,OAAO,EAAE,SAAS,kBAAkB,GAAG;IAC3E;IACA,QAAQ,cAAc,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;IACxC;IACA,QAAQ,cAAc,EAAE,CAAC;IACzB,KAAK,CAAC,CAAC;IACP,IAAI,YAAY,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC;AAC7C;IACA;IACA,IAAI,MAAM,SAAS,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;IACvD,IAAI,SAAS,CAAC,YAAY,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;IAC7C,IAAI,SAAS,CAAC,WAAW,GAAG,QAAQ,CAAC;IACrC,IAAI,SAAS,CAAC,gBAAgB,CAAC,OAAO,EAAE,cAAc,CAAC,CAAC;IACxD,IAAI,YAAY,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;AACxC;IACA;IACA,IAAI,SAAS,CAAC,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC;AACtC;IACA;IACA,IAAI,KAAK,CAAC,cAAc,EAAE,CAAC;IAC3B,CAAC;AACD;IACA,SAAS,eAAe,CAAC,SAAS,EAAE,OAAO,EAAE,UAAU,EAAE,SAAS,EAAE,QAAQ,EAAE;IAC9E,IAAI,MAAM,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;IAClD,IAAI,KAAK,CAAC,YAAY,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;IACvC,IAAI,KAAK,CAAC,WAAW,GAAG,SAAS,CAAC;AAClC;IACA,IAAI,MAAM,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;IAClD,IAAI,KAAK,CAAC,YAAY,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;IAC1C,IAAI,KAAK,CAAC,YAAY,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;IACtC,IAAI,KAAK,CAAC,YAAY,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;IACxC,IAAI,KAAK,CAAC,KAAK,GAAG,UAAU,CAAC;IAC7B,IAAI,KAAK,CAAC,QAAQ,GAAG,QAAQ,CAAC;AAC9B;IACA;IACA,IAAI,YAAY,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;IACpC,IAAI,YAAY,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;IACpC,CAAC;AACD;AACA;IACA;IACA;IACO,SAAS,eAAe,CAAC,WAAW,EAAE,SAAS,EAAE,QAAQ,EAAE;IAClE,IAAI,OAAO,SAAS,CAAC,YAAY,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAE,CAAC,IAAI,SAAS,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,IAAI,eAAe,CAAC,WAAW,EAAE,QAAQ,CAAC,KAAK,GAAG,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC;IAChK,CAAC;IACD;IACA;IACO,SAAS,cAAc,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,EAAE;IACpD;IACA,IAAI,MAAM,YAAY,GAAG,QAAQ,CAAC,cAAc,CAAC,cAAc,CAAC,CAAC;IACjE,IAAI,MAAM,iBAAiB,GAAG,QAAQ,CAAC,cAAc,CAAC,cAAc,CAAC,CAAC;IACtE,IAAI,MAAM,kBAAkB,GAAG,QAAQ,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC;IACxE,IAAI,MAAM,gBAAgB,GAAG,QAAQ,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC;IACpE,IAAI,MAAM,YAAY,GAAG,QAAQ,CAAC,cAAc,CAAC,cAAc,CAAC,CAAC;IACjE,IAAI,MAAM,sBAAsB,GAAG,QAAQ,CAAC,cAAc,CAAC,kBAAkB,CAAC,CAAC;AAC/E;IACA;IACA,IAAI,MAAM,cAAc,GAAG,iBAAiB,CAAC,KAAK,CAAC;IACnD,IAAI,MAAM,eAAe,GAAG,kBAAkB,CAAC,KAAK,CAAC;IACrD,IAAI,MAAM,aAAa,GAAG,gBAAgB,CAAC,KAAK,CAAC;IACjD,IAAI,MAAM,QAAQ,GAAG,YAAY,CAAC,KAAK,CAAC;IACxC;IACA,IAAI,MAAM,MAAM,GAAG,QAAQ,CAAC,YAAY,CAAC,YAAY,CAAC,cAAc,CAAC,EAAE,EAAE,CAAC,CAAC;AAC3E;IACA;IACA,IAAI,MAAM,oBAAoB,GAAG,KAAK,CAAC,IAAI,CAAC,sBAAsB,CAAC,eAAe,CAAC,CAAC,GAAG,CAAC,MAAM,IAAI,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC;AAC9H;IACA;IACA,IAAI,MAAM,eAAe,GAAG,KAAK,CAAC,SAAS,CAAC,IAAI,IAAI,IAAI,CAAC,EAAE,KAAK,MAAM,CAAC,CAAC;IACxE,IAAI,IAAI,eAAe,KAAK,CAAC,CAAC,EAAE;IAChC,QAAQ,KAAK,CAAC,eAAe,CAAC,CAAC,IAAI,GAAG,cAAc,CAAC;IACrD,QAAQ,KAAK,CAAC,eAAe,CAAC,CAAC,KAAK,GAAG,eAAe,CAAC;IACvD,QAAQ,KAAK,CAAC,eAAe,CAAC,CAAC,GAAG,GAAG,aAAa,CAAC;IACnD,QAAQ,KAAK,CAAC,eAAe,CAAC,CAAC,QAAQ,GAAG,QAAQ,GAAG,GAAG,GAAG,GAAG,GAAG,QAAQ,CAAC;IAC1E,QAAQ,KAAK,CAAC,eAAe,CAAC,CAAC,YAAY,GAAG,oBAAoB,CAAC;IACnE,KAAK;AACL;IACA;IACA,IAAI,uBAAuB,CAAC,KAAK,CAAC,CAAC;IACnC,IAAI,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IACvB;IACA,IAAI,GAAG,QAAQ;IACf,IAAI;IACJ,QAAQ,UAAU,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;IACzC,KAAK;IACL,SAAQ;IACR,QAAQ,UAAU,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;IACtC,KAAK;AACL;IACA;IACA,IAAI,cAAc,EAAE,CAAC;IACrB,CAAC;AACD;IACO,SAAS,eAAe,CAAC,IAAI,CAAC,QAAQ,EAAE;IAC/C,IAAI,MAAM,kBAAkB,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,KAAK,IAAI,QAAQ,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;IACxF,IAAI,MAAM,iBAAiB,GAAG,kBAAkB,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;AACpH;IACA,IAAI,OAAO,CAAC,SAAS,GAAG,CAAC;AACzB,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC;AACtB,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC;AACxB,SAAS,EAAE,IAAI,CAAC,GAAG,CAAC;AACpB,IAAI,EAAE,iBAAiB,CAAC;AACxB,IAAI,CAAC,CAAC;IACN,IAAI,OAAO,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,EAAE,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;IAC5C,IAAI,OAAO,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,EAAE,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;IAC3C,IAAI,OAAO,CAAC,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC;IACpC,CAAC;AACD;IACO,SAAS,eAAe,GAAG;IAClC,IAAI,OAAO,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;IACnC;;IC9MA,MAAM,KAAK,GAAG,4BAA4B,CAAC;IAC5B,MAAM,UAAU,CAAC;IAChC,EAAE,WAAW,GAAG;IAChB,IAAI,IAAI,CAAC,QAAQ,CAAC;IAClB,IAAI,IAAI,CAAC,SAAS,CAAC;IACnB,IAAI,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;IAC5B,IAAI,IAAI,CAAC,QAAQ,CAAC;IAClB,IAAI,IAAI,CAAC,YAAY,CAAC;IACtB,IAAI,IAAI,CAAC,WAAW,CAAC;IACrB;IACA,IAAI,IAAI,CAAC,eAAe,CAAC;IACzB,IAAI,IAAI,CAAC,mBAAmB,CAAC;IAC7B,IAAI,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;IACjC,IAAI,IAAI,CAAC,MAAM,CAAC;IAChB,IAAI,IAAI,CAAC,aAAa,EAAE;IACxB,IAAI,IAAI,CAAC,KAAK,EAAE;IAChB,IAAI,IAAI,CAAC,OAAO,EAAE;IAClB,GAAG;AACH;IACA,EAAE,cAAc,CAAC,KAAK,EAAE;IACxB,IAAI,OAAO,KAAK,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,IAAI,KAAK;IACzC,MAAM,OAAO,KAAK,GAAG,CAAC,IAAI,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;IAChF,KAAK,EAAE,CAAC,CAAC,CAAC;IACV,GAAG;AACH;IACA,EAAE,gBAAgB,CAAC,KAAK,EAAE;IAC1B,IAAI,uBAAuB,CAAC,KAAK,CAAC,CAAC;IACnC,IAAI,MAAM,cAAc,GAAG,QAAQ,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;IAC5D,IAAI,IAAI,GAAG,GAAG,cAAc,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;AAClD;IACA;IACA,IAAI,IAAI,CAAC,GAAG,EAAE;IACd;IACA,MAAM,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IAClC,MAAM,cAAc,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;IACtC,KAAK,MAAM;IACX,MAAM,IAAI,CAAC,uBAAuB,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;IAC/C,KAAK;IACL,GAAG;AACH;IACA,EAAE,SAAS,CAAC,KAAK,EAAE;IACnB,IAAI,MAAM,GAAG,GAAG,QAAQ,CAAC,eAAe,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;IACvD,IAAI,GAAG,CAAC,YAAY,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;IAC1C,IAAI,GAAG,CAAC,YAAY,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;IACvC,IAAI,MAAM,SAAS,GAAG,QAAQ,CAAC,eAAe,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;IAC3D,IAAI,SAAS,CAAC,YAAY,CAAC,OAAO,EAAE,aAAa,CAAC,CAAC;IACnD,IAAI,GAAG,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;IAC/B,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;IAClD,IAAI,MAAM,UAAU,GAAG,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC/D,IAAI,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;AAC7C;IACA,IAAI,GAAG,CAAC,YAAY,CAAC,SAAS,EAAE,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;AAC9E;IACA,IAAI,eAAe,CAAC,SAAS,EAAE,UAAU,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;IACxD,IAAI,mBAAmB,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;IAC9D,IAAI,eAAe,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,EAAE,UAAU,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;IACvE,IAAI,IAAI,CAAC,cAAc,CAAC,GAAG,EAAE,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;IACnD,IAAI,OAAO,GAAG,CAAC;IACf,GAAG;AACH;IACA,EAAE,iBAAiB,CAAC,KAAK,EAAE;IAC3B,IAAI,MAAM,UAAU,GAAG,KAAK,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;IAC/D,IAAI,MAAM,QAAQ,GAAG,KAAK,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;AAC3D;IACA,IAAI,MAAM,OAAO,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC;IACtD,IAAI,MAAM,YAAY,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC;IAC3C,IAAI,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC;AAChD;IACA,IAAI,MAAM,OAAO,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC;IACpD,IAAI,MAAM,QAAQ,GAAG,CAAC,OAAO,GAAG,OAAO,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC;AACjE;IACA,IAAI,IAAI,UAAU,GAAG,QAAQ,GAAG,GAAG,GAAG,EAAE,GAAG,QAAQ,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,CAAC;AACpE;IACA,IAAI,OAAO,EAAE,YAAY,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC;IACjD,GAAG;AACH;IACA,EAAE,mBAAmB,CAAC,QAAQ,EAAE;IAChC,IAAI,QAAQ,QAAQ,CAAC,UAAU,IAAI,CAAC,QAAQ,CAAC,OAAO,GAAG,QAAQ,CAAC,YAAY,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC,EAAE;IACxG,GAAG;AACH;IACA,EAAE,cAAc,CAAC,GAAG,EAAE,KAAK,EAAE,QAAQ,EAAE;IACvC,IAAI,IAAI,WAAW,GAAG,CAAC,CAAC;AACxB;IACA,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,KAAK,KAAK;IACnC,MAAM,MAAM,SAAS,GAAG,QAAQ,CAAC,eAAe,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;IAC7D,MAAM,SAAS,CAAC,YAAY,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;IAC/C,MAAM,GAAG,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;AACjC;IACA,MAAM,MAAM,gBAAgB,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,KAAK,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC3G,MAAM,MAAM,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,gBAAgB,GAAG,QAAQ,CAAC,YAAY,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,QAAQ,CAAC,YAAY,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;IACzL,MAAM,MAAM,QAAQ,GAAG,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChG;IACA,MAAM,MAAM,IAAI,GAAG,QAAQ,CAAC,eAAe,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;IAC3D,MAAM,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,WAAW,CAAC,CAAC;IAC1C,MAAM,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,WAAW,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;IACpD,MAAM,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;IAC3C,MAAM,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;IACtC,MAAM,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;IAC3C,MAAM,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;AAClC;IACA,MAAM,MAAM,aAAa,GAAG,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,IAAI,GAAG,CAAC;IAC7D,MAAM,MAAM,YAAY,GAAG,QAAQ,CAAC,eAAe,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;IACnE,MAAM,YAAY,CAAC,YAAY,CAAC,GAAG,EAAE,WAAW,CAAC,CAAC;IAClD,MAAM,YAAY,CAAC,YAAY,CAAC,GAAG,EAAE,WAAW,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;IAC5D,MAAM,YAAY,CAAC,YAAY,CAAC,OAAO,EAAE,aAAa,CAAC,CAAC;IACxD,MAAM,YAAY,CAAC,YAAY,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;IAC9C,MAAM,YAAY,CAAC,YAAY,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;IACnD,MAAM,SAAS,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;AAC1C;IACA,MAAM,MAAM,IAAI,GAAG,QAAQ,CAAC,eAAe,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;IAC3D,MAAM,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,WAAW,GAAG,CAAC,CAAC,CAAC;IAC9C,MAAM,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,WAAW,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;IACpD,MAAM,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC;IACnC,MAAM,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;AAClC;IACA;IACA,MAAM,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;IACnD,QAAQ,MAAM,YAAY,GAAG,QAAQ,CAAC,eAAe,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;IAClE,QAAQ,YAAY,CAAC,YAAY,CAAC,OAAO,CAAC,SAAS,EAAC;IACpD,QAAQ,SAAS,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;IAC5C,QAAQ,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,QAAQ,KAAK;IACpD,UAAU,MAAM,mBAAmB,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC,YAAY,CAAC,GAAG,CAAC,KAAK,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC5H,UAAU,MAAM,cAAc,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,mBAAmB,GAAG,QAAQ,CAAC,YAAY,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,QAAQ,CAAC,YAAY,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;IACtM,UAAU,MAAM,WAAW,GAAG,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAC7G;IACA,UAAU,MAAM,OAAO,GAAG,QAAQ,CAAC,eAAe,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;IAClE,UAAU,OAAO,CAAC,YAAY,CAAC,OAAO,CAAC,SAAS,EAAC;IACjD,UAAU,OAAO,CAAC,YAAY,CAAC,GAAG,EAAE,cAAc,CAAC,CAAC;IACpD,UAAU,OAAO,CAAC,YAAY,CAAC,GAAG,EAAE,CAAC,QAAQ,GAAG,WAAW,GAAG,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC,CAAC;IAC5E,UAAU,OAAO,CAAC,YAAY,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;IACrD,UAAU,OAAO,CAAC,YAAY,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;IAC7C,UAAU,OAAO,CAAC,YAAY,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;IAClD,UAAU,YAAY,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;AAC5C;IACA,UAAU,MAAM,gBAAgB,GAAG,CAAC,WAAW,GAAG,OAAO,CAAC,QAAQ,IAAI,GAAG,CAAC;IAC1E,UAAU,MAAM,eAAe,GAAG,QAAQ,CAAC,eAAe,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;IAC1E,UAAU,eAAe,CAAC,YAAY,CAAC,OAAO,CAAC,kBAAkB,EAAC;IAClE,UAAU,eAAe,CAAC,YAAY,CAAC,GAAG,EAAE,cAAc,CAAC,CAAC;IAC5D,UAAU,eAAe,CAAC,YAAY,CAAC,GAAG,EAAE,CAAC,QAAQ,GAAG,WAAW,GAAG,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC,CAAC;IACpF,UAAU,eAAe,CAAC,YAAY,CAAC,OAAO,EAAE,gBAAgB,CAAC,CAAC;IAClE,UAAU,eAAe,CAAC,YAAY,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;IACrD,UAAU,eAAe,CAAC,YAAY,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;IAC1D,UAAU,YAAY,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC;AACpD;IACA,UAAU,MAAM,OAAO,GAAG,QAAQ,CAAC,eAAe,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;IAClE,UAAU,OAAO,CAAC,YAAY,CAAC,GAAG,EAAE,cAAc,GAAG,CAAC,CAAC,CAAC;IACxD,UAAU,OAAO,CAAC,YAAY,CAAC,GAAG,EAAE,CAAC,QAAQ,GAAG,WAAW,GAAG,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC,CAAC;IAC5E,UAAU,OAAO,CAAC,WAAW,GAAG,OAAO,CAAC,IAAI,CAAC;IAC7C,UAAU,OAAO,CAAC,YAAY,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;IACpD,UAAU,YAAY,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;AAC5C;IACA,UAAU,OAAO,CAAC,gBAAgB,CAAC,WAAW,EAAE,MAAM,eAAe,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;IAC9F,UAAU,OAAO,CAAC,gBAAgB,CAAC,WAAW,EAAE,MAAM,eAAe,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;IAC9F,UAAU,OAAO,CAAC,gBAAgB,CAAC,UAAU,EAAE,eAAe,CAAC,CAAC;AAChE;IACA,UAAU,eAAe,CAAC,gBAAgB,CAAC,WAAW,EAAE,MAAM,eAAe,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;IACtG,UAAU,eAAe,CAAC,gBAAgB,CAAC,UAAU,EAAE,eAAe,CAAC,CAAC;AACxE;IACA,UAAU,OAAO,CAAC,gBAAgB,CAAC,aAAa,EAAE,CAAC,KAAK,KAAK;IAC7D,YAAY,KAAK,CAAC,cAAc,EAAE,CAAC;IACnC,YAAY,QAAQ,CAAC,KAAK,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IAC1D,WAAW,CAAC,CAAC;IACb,UAAU,eAAe,CAAC,gBAAgB,CAAC,aAAa,EAAE,CAAC,KAAK,KAAK;IACrE,YAAY,KAAK,CAAC,cAAc,EAAE,CAAC;IACnC,YAAY,QAAQ,CAAC,KAAK,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IAC1D,WAAW,CAAC,CAAC;IACb,UAAU,OAAO,CAAC,gBAAgB,CAAC,aAAa,EAAE,CAAC,KAAK,KAAK;IAC7D,YAAY,KAAK,CAAC,cAAc,EAAE,CAAC;IACnC,YAAY,QAAQ,CAAC,KAAK,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IAC1D,WAAW,CAAC,CAAC;IACb,UAAU,OAAO,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC,KAAK,KAAK;IAC3D,YAAY,KAAK,CAAC,cAAc,EAAE,CAAC;IACnC,YAAY,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,EAAE,eAAe,GAAG,OAAO,GAAG,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,CAAC;IAC7F,WAAW,CAAC,CAAC;IACb,UAAU,eAAe,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC,KAAK,KAAK;IACnE,YAAY,KAAK,CAAC,cAAc,EAAE,CAAC;IACnC,YAAY,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,EAAE,eAAe,EAAE,OAAO,GAAG,IAAI,CAAC,OAAO,GAAG,KAAK,EAAC;IAC3F,WAAW,CAAC,CAAC;IACb,UAAU,OAAO,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC,KAAK,KAAK;IAC3D,YAAY,KAAK,CAAC,cAAc,EAAE,CAAC;IACnC,YAAY,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,EAAE,eAAe,GAAG,OAAO,GAAG,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,CAAC;IAC7F,WAAW,CAAC,CAAC;IACb,SAAS,CAAC,CAAC;IACX,OAAO;AACP;IACA;IACA,MAAM,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE,MAAM,eAAe,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;IAC7E,MAAM,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE,MAAM,eAAe,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;IAC7E,MAAM,IAAI,CAAC,gBAAgB,CAAC,UAAU,EAAE,eAAe,CAAC,CAAC;AACzD;IACA,MAAM,YAAY,CAAC,gBAAgB,CAAC,WAAW,EAAE,MAAM,eAAe,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;IACrF,MAAM,YAAY,CAAC,gBAAgB,CAAC,UAAU,EAAE,eAAe,CAAC,CAAC;AACjE;IACA,MAAM,IAAI,CAAC,gBAAgB,CAAC,aAAa,EAAE,CAAC,KAAK,KAAK;IACtD,QAAQ,KAAK,CAAC,cAAc,EAAE,CAAC;IAC/B,QAAQ,QAAQ,CAAC,KAAK,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;IACrC,OAAO,CAAC,CAAC;IACT,MAAM,YAAY,CAAC,gBAAgB,CAAC,aAAa,EAAE,CAAC,KAAK,KAAK;IAC9D,QAAQ,KAAK,CAAC,cAAc,EAAE,CAAC;IAC/B,QAAQ,QAAQ,CAAC,KAAK,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;IACrC,OAAO,CAAC,CAAC;IACT,MAAM,IAAI,CAAC,gBAAgB,CAAC,aAAa,EAAE,CAAC,KAAK,KAAK;IACtD,QAAQ,KAAK,CAAC,cAAc,EAAE,CAAC;IAC/B,QAAQ,QAAQ,CAAC,KAAK,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;IACrC,OAAO,CAAC,CAAC;IACT;IACA,MAAM,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC,KAAK,KAAK;IACpD,QAAQ,KAAK,CAAC,cAAc,EAAE,CAAC;IAC/B,QAAQ,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,IAAI,EAAE,YAAY,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IAC9D,OAAO,CAAC,CAAC;IACT,MAAM,YAAY,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC,KAAK,KAAK;IAC5D,QAAQ,KAAK,CAAC,cAAc,EAAE,CAAC;IAC/B,QAAQ,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,KAAK,EAAC;IAC9D,OAAO,CAAC,CAAC;IACT,MAAM,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC,KAAK,KAAK;IACpD,QAAQ,KAAK,CAAC,cAAc,EAAE,CAAC;IAC/B,QAAQ,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,IAAI,EAAE,YAAY,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IAC9D,OAAO,CAAC,CAAC;IACT,MAAM,QAAQ,CAAC,gBAAgB,CAAC,SAAS,EAAE,CAAC,KAAK,KAAK;IACtD,QAAQ,QAAQ,CAAC,mBAAmB,CAAC,WAAW,CAAC,IAAI,CAAC,gBAAgB,EAAC;IACvE,QAAQ,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;IACxG,OAAO,CAAC,CAAC;IACT;IACA,MAAM,WAAW,GAAG,WAAW,GAAG,CAAC,CAAC;IACpC,MAAM,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;IACnD,QAAQ,WAAW,GAAG,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;IACxD,OAAO;IACP,KAAK,CAAC,CAAC;IACP,GAAG;AACH;IACA,EAAE,QAAQ,CAAC,IAAI,EAAE,KAAK,EAAE;IACxB,IAAI,IAAI,UAAU,CAAC;IACnB,IAAI,OAAO,YAAY;IACvB,MAAM,MAAM,IAAI,GAAG,SAAS,CAAC;IAC7B,MAAM,MAAM,OAAO,GAAG,IAAI,CAAC;IAC3B,MAAM,IAAI,CAAC,UAAU,EAAE;IACvB,QAAQ,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;IAClC,QAAQ,UAAU,GAAG,IAAI,CAAC;IAC1B,QAAQ,UAAU,CAAC,OAAO,UAAU,GAAG,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC;IACtD,OAAO;IACP,KAAK,CAAC;IACN,GAAG;AACH;IACA,EAAE,0BAA0B,CAAC,QAAQ,EAAE,aAAa,EAAE,KAAK,EAAE;IAC7D,IAAI,MAAM,mBAAmB,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI;IACjD,MAAM,aAAa,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC;IAClD,KAAK,CAAC;IACN,IAAI,MAAM,QAAQ,GAAG,mBAAmB,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;IACzE,IAAI,MAAM,OAAO,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,EAAC;IACnD,IAAI,IAAI,OAAO,GAAG,QAAQ,EAAE;IAC5B,MAAM,OAAO,CAAC,CAAC;IACf,KAAK,MAAM;IACX,MAAM,OAAO,CAAC,CAAC;IACf,KAAK;IACL,GAAG;AACH;IACA,EAAE,cAAc,CAAC,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,aAAa,EAAE,KAAK,EAAE,QAAQ,CAAC,IAAI,EAAE;IACjF,IAAI,KAAK,CAAC,cAAc,EAAE,CAAC;IAC3B,IAAI,IAAI,IAAI,CAAC,UAAU,EAAE;IACzB,MAAM,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,aAAa,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;IACpG,KAAK;IACL,GAAG;AACH;IACA,EAAE,SAAS,CAAC,KAAK,EAAE,QAAQ,EAAE,gBAAgB,GAAG,aAAa,EAAE,IAAI,GAAG,QAAQ,CAAC,IAAI,EAAE;IACrF,IAAI,IAAI,CAAC,aAAa,GAAG,aAAa,EAAE;IACxC,IAAI,IAAI,CAAC,KAAK,GAAG,IAAI,EAAE;IACvB,IAAI,IAAI,CAAC,QAAQ,GAAG,QAAQ,EAAE;IAC9B,IAAI,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;IAE5C,IAAI,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;IAC3B,IAAI,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,OAAO,CAAC;IAClC,IAAI,IAAI,CAAC,YAAY,GAAG,UAAU,CAAC,QAAQ,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC;IACnE,IAAI,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,OAAO,GAAG,QAAQ,CAAC,qBAAqB,EAAE,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;AACrG;IACA;IACA,IAAI,IAAI,CAAC,eAAe,GAAG,QAAQ,CAAC;IACpC,IAAI,IAAI,CAAC,mBAAmB,GAAG,gBAAgB,CAAC;IAChD,IAAI,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,KAAK,KAAK;IACrD,MAAM,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,mBAAmB,EAAE,aAAa,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;IAChH,KAAK,EAAE,EAAE,CAAC,CAAC;IACX,IAAI,KAAK,CAAC,cAAc,EAAE,CAAC;IAC3B,IAAI,QAAQ,CAAC,gBAAgB,CAAC,WAAW,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;AACjE;IACA,GAAG;AACH;IACA,EAAE,qBAAqB,CAAC,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,aAAa,EAAE,KAAK,EAAE,QAAQ,EAAE;IACrF,IAAI,MAAM,MAAM,GAAG,CAAC,OAAO,GAAG,IAAI,CAAC,QAAQ,IAAI,IAAG;IAClD,IAAI,IAAI,IAAI,CAAC,WAAW,EAAE;IAC1B;IACA,MAAM,MAAM,cAAc,GAAG,CAAC,IAAI,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,MAAM,CAAC;IAChI,MAAM,MAAM,SAAS,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,OAAO,EAAE,GAAG,CAAC,UAAU,CAAC,QAAQ,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC;AAC/I;IACA,MAAM,IAAI,IAAI,CAAC,0BAA0B,CAAC,SAAS,EAAE,aAAa,EAAE,KAAK,CAAC,EAAE;IAC5E,QAAQ,KAAK,CAAC,+CAA+C,CAAC,CAAC;IAC/D,QAAQ,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;IACnD,QAAQ,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;IAChC,QAAQ,MAAM,gBAAgB,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,aAAa,CAAC,EAAE,CAAC,CAAC;IACjF,QAAQ,IAAI,gBAAgB,KAAK,CAAC,CAAC,EAAE;IACrC,UAAU,MAAM,UAAU,GAAG,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,GAAG,CAAC,UAAU,CAAC,QAAQ,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC;AACvI;IACA;IACA,UAAU,KAAK,CAAC,gBAAgB,CAAC,CAAC,KAAK,GAAG,SAAS,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAChF,UAAU,KAAK,CAAC,gBAAgB,CAAC,CAAC,GAAG,GAAG,UAAU,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/E;IACA;IACA,UAAU,uBAAuB,CAAC,KAAK,CAAC,CAAC;IACzC,UAAU,GAAG,QAAQ;IACrB,UAAU;IACV,YAAY,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;IAC5C,WAAW;IACX,eAAc;IACd,YAAY,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;IACzC,WAAW;IACX,SAAS;IACT,OAAO;AACP;IACA;AACA;IACA,MAAM,MAAM,cAAc,GAAG,UAAU,CAAC,QAAQ,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,GAAG,UAAU,CAAC,QAAQ,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC;IACjH,MAAM,MAAM,mBAAmB,GAAG,IAAI,CAAC,GAAG,CAAC,cAAc,EAAE,cAAc,CAAC,CAAC;IAC3E,MAAM,MAAM,aAAa,GAAG,cAAc,GAAG,mBAAmB,CAAC;IACjE,MAAM,QAAQ,CAAC,YAAY,CAAC,GAAG,EAAE,cAAc,CAAC,CAAC;IACjD,MAAM,QAAQ,CAAC,YAAY,CAAC,OAAO,EAAE,aAAa,CAAC,CAAC;AACpD;IACA,MAAM,QAAQ,CAAC,YAAY,CAAC,GAAG,EAAE,cAAc,CAAC,CAAC;IACjD,MAAM,QAAQ,CAAC,YAAY,CAAC,OAAO,EAAE,aAAa,GAAG,aAAa,CAAC,QAAQ,GAAG,GAAG,CAAC,CAAC;AACnF;IACA,KAAK,MAAM;IACX;IACA,MAAM,MAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC;IAClD,MAAM,QAAQ,CAAC,YAAY,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;IAC/C,MAAM,QAAQ,CAAC,YAAY,CAAC,OAAO,EAAE,QAAQ,GAAG,aAAa,CAAC,QAAQ,GAAG,GAAG,CAAC,CAAC;IAC9E,KAAK;IACL,IAAI,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC7B,GAAG;AACH;IACA,EAAE,aAAa,CAAC,QAAQ,GAAG,aAAa,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,GAAG,IAAI,EAAE;IAC5E,IAAI,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;IAC/C,IAAI,IAAI,IAAI,CAAC,UAAU,EAAE;IACzB,MAAM,IAAI,CAAC,UAAU,GAAG,MAAK;IAC7B;IACA,MAAM,MAAM,gBAAgB,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,aAAa,CAAC,EAAE,CAAC,CAAC;IACjF,MAAM,IAAI,gBAAgB,KAAK,CAAC,CAAC,EAAE;IACnC,QAAQ,MAAM,YAAY,GAAG,IAAI,IAAI;IACrC,UAAU,QAAQ,CAAC,YAAY,CAAC,OAAO,EAAE;IACzC,UAAU,CAAC,UAAU,CAAC,QAAQ,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC;IAC/E,SAAS,CAAC;IACV,QAAQ,MAAM,UAAU,GAAG,IAAI,IAAI;IACnC,UAAU,YAAY,CAAC,OAAO,EAAE;IAChC,UAAU,CAAC,UAAU,CAAC,QAAQ,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC;IACnF,SAAS,CAAC;IACV;IACA,QAAQ,KAAK,CAAC,gBAAgB,CAAC,CAAC,KAAK,GAAG,YAAY,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACjF,QAAQ,KAAK,CAAC,gBAAgB,CAAC,CAAC,GAAG,GAAG,UAAU,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7E;IACA,QAAQ,uBAAuB,CAAC,KAAK,CAAC,CAAC;IACvC,QAAQ,IAAI,QAAQ,EAAE;IACtB,UAAU,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;IAC1C,SAAS,MAAM;IACf,UAAU,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;IACvC,SAAS;AACT;IACA,OAAO;IACP,KAAK;AACL;IACA,GAAG;AACH;IACA,EAAE,uBAAuB,CAAC,GAAG,EAAE,KAAK,EAAE;IACtC;IACA,IAAI,OAAO,GAAG,CAAC,UAAU,EAAE;IAC3B,MAAM,GAAG,CAAC,WAAW,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;IACtC,KAAK;IACL,IAAI,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,EAAC;IAC5C;IACA,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;IAClD,IAAI,MAAM,UAAU,GAAG,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC/D,IAAI,MAAM,SAAS,GAAG,QAAQ,CAAC,eAAe,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;IAC3D,IAAI,SAAS,CAAC,YAAY,CAAC,OAAO,EAAE,aAAa,CAAC,CAAC;IACnD,IAAI,GAAG,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;AAC/B;IACA,IAAI,GAAG,CAAC,YAAY,CAAC,SAAS,EAAE,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;AAC9E;IACA,IAAI,eAAe,CAAC,SAAS,EAAE,UAAU,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;IACxD,IAAI,mBAAmB,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;IAC9D,IAAI,eAAe,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,EAAE,UAAU,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;IACvE,IAAI,IAAI,CAAC,cAAc,CAAC,GAAG,EAAE,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;IACnD,GAAG;IACH,EAAE,OAAO,WAAW,CAAC,KAAK,EAAE;IAC5B,IAAI,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IACvB,IAAI,MAAM,UAAU,GAAG,IAAI,UAAU,EAAE,CAAC;IACxC,IAAI,UAAU,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;IACvC,GAAG;AACH;IACA,EAAE,OAAO,QAAQ,EAAE;IACnB;IACA,IAAI,QAAQ,CAAC,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;IACrE,GAAG;IACH;;;;;;;;"}